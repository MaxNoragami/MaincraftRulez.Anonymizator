<sap:ActivityDesigner x:Class="MaincraftRulez.Anonymizator.Activities.Design.Designers.GenerateSecretKeyDesigner"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:activity="clr-namespace:MaincraftRulez.Anonymizator.Activities.Properties;assembly=MaincraftRulez.Anonymizator.Activities"
                      xmlns:sap="clr-namespace:System.Activities.Presentation;assembly=System.Activities.Presentation"
                      xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation"
                      xmlns:sapc="clr-namespace:System.Activities.Presentation.Converters;assembly=System.Activities.Presentation"
                      xmlns:converters="clr-namespace:UiPath.Shared.Activities.Design.Converters"
                      xmlns:uip="clr-namespace:UiPath.Shared.Activities.Design.Controls"
                      xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
                      xmlns:s="clr-namespace:System;assembly=mscorlib">

    <sap:ActivityDesigner.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Themes\Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <sapc:ArgumentToExpressionConverter x:Key="ArgumentToExpressionConverter" />
            <converters:ActivityIconConverter x:Key="ActivityIconConverter" />
        </ResourceDictionary>
    </sap:ActivityDesigner.Resources>

    <sap:ActivityDesigner.Icon>
        <DrawingBrush Stretch="Uniform" Drawing="{Binding Path=ModelItem, Converter={StaticResource ActivityIconConverter}, ConverterParameter=pack://application:\,\,\,/MaincraftRulez.Anonymizator.Activities.Design;component/themes/icons.xaml}" />
    </sap:ActivityDesigner.Icon>

    <uip:ActivityDecoratorControl Style="{StaticResource ActivityDecoratorStyle}">
        <Grid Width="300">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Generate Tweak Input -->
            <Label Content="Generate Tweak" 
                   Grid.Row="0" Grid.Column="0"
                   ToolTip="If true, generates a tweak value instead of a secret key"/>
            <sapv:ExpressionTextBox 
                Grid.Row="0" Grid.Column="1" 
                ExpressionType="{x:Type s:Boolean}" 
                OwnerActivity="{Binding Path=ModelItem}" 
                HintText="true/false" 
                UseLocationExpression="False">
                <sapv:ExpressionTextBox.Expression>
                    <Binding Path="ModelItem.GenerateTweak" 
                            Converter="{StaticResource ArgumentToExpressionConverter}" 
                            Mode="TwoWay" 
                            ConverterParameter="In" 
                            UpdateSourceTrigger="PropertyChanged" />
                </sapv:ExpressionTextBox.Expression>
            </sapv:ExpressionTextBox>
            
            <!-- Generated Key Output -->
            <Label Content="Generated Key" 
                   Grid.Row="1" Grid.Column="0"
                   ToolTip="Variable to store the generated key or tweak"/>
            <sapv:ExpressionTextBox 
                Grid.Row="1" Grid.Column="1" 
                OwnerActivity="{Binding Path=ModelItem}" 
                HintText="Output variable" 
                UseLocationExpression="True">
                <sapv:ExpressionTextBox.Expression>
                    <Binding Path="ModelItem.GeneratedKey" 
                            Converter="{StaticResource ArgumentToExpressionConverter}" 
                            Mode="TwoWay" 
                            ConverterParameter="Out" 
                            UpdateSourceTrigger="PropertyChanged" />
                </sapv:ExpressionTextBox.Expression>
            </sapv:ExpressionTextBox>
            
        </Grid>
    </uip:ActivityDecoratorControl>
</sap:ActivityDesigner>
